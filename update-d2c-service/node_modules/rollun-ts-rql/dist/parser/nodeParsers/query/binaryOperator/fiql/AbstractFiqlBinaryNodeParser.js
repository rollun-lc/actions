"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _Token=require("../../../../Token");function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}var AbstractFiqlBinaryNodeParser=function(){function AbstractFiqlBinaryNodeParser(){_classCallCheck(this,AbstractFiqlBinaryNodeParser)}_createClass(AbstractFiqlBinaryNodeParser,[{key:"parse",value:function parse(tokenStream){tokenStream.expect(_Token.TokenTypeNameMap.T_OPERATOR,this.getOperatorNames());tokenStream.expect(_Token.TokenTypeNameMap.T_OPEN_PARENTHESIS);var field=tokenStream.expect(_Token.TokenTypeNameMap.T_STRING).value;tokenStream.expect(_Token.TokenTypeNameMap.T_CLOSE_PARENTHESIS);return this.createNode(field)}}]);return AbstractFiqlBinaryNodeParser}();exports["default"]=AbstractFiqlBinaryNodeParser;