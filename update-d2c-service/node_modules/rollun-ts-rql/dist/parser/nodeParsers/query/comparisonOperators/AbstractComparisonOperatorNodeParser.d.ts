import { NodeParserInterface, SubParserInterface } from '../../../interfaces';
import AbstractNode from '../../../../nodes/AbstractNode';
import TokenStream from '../../../TokenStream';
export default abstract class AbstractComparisonOperatorNodeParser implements NodeParserInterface {
    protected fieldNameParser: any;
    protected valueParser: any;
    constructor(fieldNameParser: SubParserInterface, valueParser: SubParserInterface);
    protected abstract createNode(field: any, value: any): any;
    abstract parse(tokenStream: TokenStream): AbstractNode;
    abstract supports(tokenStream: TokenStream): boolean;
    protected abstract getOperatorName(): any;
}
